<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.moondev.blog.mapper.ArticleMapper">
    <resultMap id="articleMap" type="cn.moondev.blog.model.Article">
        <id column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="summary" property="summary"/>
        <result column="author" property="author"/>
        <result column="created_time" property="createdTime"/>
        <result column="updated_time" property="updatedTime"/>
        <result column="publish_time" property="publishTime"/>
        <result column="status" property="status"/>
        <result column="image" property="image"/>
        <result column="mformat" property="mformat"/>
        <result column="aformat" property="aformat"/>
        <result column="topic_id" property="topicId"/>
        <result column="category_id" property="categoryId"/>
        <result column="view_count" property="viewCount"/>
        <result column="comment_count" property="commentCount"/>
        <result column="stick" property="stick"/>
        <result column="badge" property="badge"/>
        <result column="categoryName" property="categoryName"/>
        <result column="categoryCode" property="categoryCode"/>
        <result column="topicName" property="topicName"/>
    </resultMap>

    <select id="findById" resultMap="articleMap" parameterType="java.lang.String">
        SELECT * FROM t_article WHERE `id` = #{id}
    </select>

    <select id="findDetailById" resultMap="articleMap" parameterType="java.lang.String">
        SELECT a.id,a.title,a.comment_count,a.view_count,a.publish_time, c.name as categoryName, t.name as topicName
        FROM t_article a
        LEFT JOIN t_category c on a.category_id = c.id
        LEFT JOIN t_topic t on t.id = a.topic_id
        WHERE a.`id` = #{id}
    </select>

    <select id="findContentById" resultMap="articleMap" parameterType="java.lang.String">
        SELECT content FROM t_article WHERE `id` = #{id}
    </select>

    <select id="findContentByBadge" resultMap="articleMap" parameterType="java.lang.String">
        SELECT id,title,image,content,comment_count,view_count,publish_time
        FROM t_article
        WHERE `badge` = #{badge}
    </select>

    <select id="count" resultType="java.lang.Long" parameterType="cn.moondev.blog.dto.QueryDTO">
        SELECT count(*)
        FROM t_article
        <if test="item.point == 'back'">
            <![CDATA[ WHERE (badge <> 'ABOUTME' OR badge IS NULL) ]]>
        </if>
        <if test="item.point == 'font'">
            WHERE `status` = 1 AND (badge = '' OR badge IS NULL) AND shows = 1
        </if>
        <if test="item.point == 'badge'">
            WHERE `status` = 1 and badge = #{item.badge}
        </if>
        <if test='item.year != null'>
            AND `year` = #{item.year}
        </if>
        <if test='item.categoryId != null'>
            AND `category_id` = #{item.categoryId}
        </if>
        <if test='item.topicId != null'>
            AND `topic_id` = #{item.topicId}
        </if>
    </select>

    <select id="find" resultMap="articleMap" parameterType="cn.moondev.blog.dto.QueryDTO">
        SELECT a.aformat,a.comment_count,a.created_time,a.id,a.image,a.mformat,a.publish_time,a.summary,a.title,a.shows,
        a.updated_time,a.view_count,a.status,c.code as categoryCode, c.name as categoryName, t.name as topicName
        FROM t_article a
        LEFT JOIN t_category c on a.category_id = c.id
        LEFT JOIN t_topic t on t.id = a.topic_id
        <if test="item.point == 'back'">
            <![CDATA[ WHERE (badge <> 'ABOUTME' OR badge IS NULL) ]]>
        </if>
        <if test="item.point == 'font'">
            WHERE a.`status` = 1 AND (a.badge = '' OR a.badge IS NULL) AND shows = 1
        </if>
        <if test="item.point == 'badge'">
            WHERE a.`status` = 1 and a.badge = #{item.badge}
        </if>
        <if test='item.year != null'>
            AND a.`year` = #{item.year}
        </if>
        <if test='item.categoryId != null'>
            AND a.`category_id` = #{item.categoryId}
        </if>
        <if test='item.topicId != null'>
            AND a.`topic_id` = #{item.topicId}
        </if>
        ORDER BY publish_time DESC
        limit #{item.offset}, #{item.size}
    </select>

    <select id="hot" resultMap="articleMap">
        SELECT id,title,image,aformat,mformat,view_count,comment_count,publish_time
        FROM t_article
        WHERE `status` = 1 and (badge = '' OR badge IS NULL) AND shows = 1
        ORDER BY comment_count DESC,view_count DESC
        limit 5
    </select>

    <select id="all" resultMap="articleMap">
        SELECT id,title,image,aformat,mformat,comment_count,view_count,publish_time
        FROM t_article
        WHERE `status` = 1 AND (badge = '' OR badge IS NULL) AND shows = 1
        ORDER BY publish_time DESC
    </select>

    <select id="statByCategory" resultMap="articleMap" parameterType="java.lang.Long">
        SELECT SUM(view_count) as view_count, SUM(comment_count) as comment_count
        FROM t_article WHERE category_id = #{categoryId}
    </select>

    <select id="statByTopic" resultMap="articleMap" parameterType="java.lang.Long">
        SELECT SUM(view_count) as view_count, SUM(comment_count) as comment_count
        FROM t_article WHERE topic_id = #{topicId}
    </select>

    <update id="viewCountxx" parameterType="java.lang.String">
        UPDATE t_article SET view_count = view_count + 1 WHERE `id` = #{id};
    </update>

    <update id="commentCountxx" parameterType="java.lang.String">
        UPDATE t_article SET comment_count = comment_count + 1 WHERE `id` = #{id};
    </update>

    <insert id="upsert" parameterType="cn.moondev.blog.model.Article">
      INSERT INTO t_article (
            `id`,
            `title`,
            `content`,
            `summary`,
            `created_time`,
            `updated_time`,
            `publish_time`,
            `status`,
            `image`,
            `mformat`,
            `aformat`,
            `topic_id`,
            `category_id`,
            `view_count`,
            `comment_count`,
            `stick`,
            `year`,
            `badge`
      ) VALUES (
            #{item.id},
            #{item.title},
            #{item.content},
            #{item.summary},
            #{item.createdTime},
            #{item.updatedTime},
            #{item.publishTime},
            #{item.status},
            #{item.image},
            #{item.mformat},
            #{item.aformat},
            #{item.topicId},
            #{item.categoryId},
            #{item.viewCount},
            #{item.commentCount},
            #{item.stick},
            YEAR(NOW()),
            #{item.badge}
      ) ON DUPLICATE KEY UPDATE
            `title` = VALUES(title),
            `content` = VALUES(content),
            `summary` = VALUES(summary),
            `created_time` = VALUES(created_time),
            `updated_time` = VALUES(updated_time),
            `publish_time` = VALUES(publish_time),
            `status` = VALUES(status),
            `image` = VALUES(image),
            `mformat` = VALUES(mformat),
            `aformat` = VALUES(aformat),
            `topic_id` = VALUES(topic_id),
            `category_id` = VALUES(category_id),
            `view_count` = VALUES(view_count),
            `comment_count` = VALUES(comment_count),
            `stick` = VALUES(stick)
      </insert>
</mapper>
